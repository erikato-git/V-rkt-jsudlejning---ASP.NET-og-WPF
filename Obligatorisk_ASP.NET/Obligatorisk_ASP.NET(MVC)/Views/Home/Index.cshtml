@model Obligatorisk_ASP.NET_MVC_.Models.Kunde


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h2>Værktøjsudlejning</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.Brugernavn, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="width:215px">
            @Html.EditorFor(model => model.Brugernavn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Brugernavn, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="margin-top: 1.5%">
        <div class="col-md-10 col-md-offset-2">
            <input type="submit" value="Log in" class="btn btn-default btn-primary" />
            <input type="submit" value="Opret bruger" class="btn btn-default btn-success" formmethod="get" formaction=@Url.Action("OpretBruger") />
        </div>
    </div>

    @{
        if (TempData["LoginError"] == null) { TempData["LoginError"] = ""; }

        if (TempData["LoginError"].Equals("Error"))
        {
            <p style="color: red">Bruger blev ikke fundet</p>
        }
    }


</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
